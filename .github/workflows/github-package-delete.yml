name: GitHub Package Delete

on:
  workflow_call:
    inputs:
      github-organisation:
        description: 'GitHub organisation name'
        type: string
        default: ${{ github.repository_owner }}
      package-type:
        description: 'Package type'
        required: true
        type: string
      package-name:
        description: 'Package name to delete'
        required: true
        type: string
      package-version:
        description: 'Package version to delete'
        required: true
        type: string
    secrets:
      github-token:
        description: 'GitHub token'

jobs:
  delete:
    runs-on: ubuntu-latest
    steps:
      - name: Check package exist
        id: package_exist
        env:
          GH_TOKEN: ${{ secrets.github-token || github.token }}
        run: |
          response=$(gh api /orgs/${{ inputs.github-organisation }}/packages?package_type=${{ inputs.package-type }})
          echo "response=$response"
          if jq -e . >/dev/null 2>&1 <<<"$response"; then
            package_name=$(jq -r '.[] | select(.name=="${{ inputs.package-name }}") | .name' <<<"$response")
            echo "package_name=$package_name"
          fi

            exist=$(if [[ -n "$package_name" ]]; then echo 1; else echo 0; fi)
            echo "exist=$exist" >> $GITHUB_OUTPUT

      - name: Get package id
        if: steps.package_exist.outputs.exist == 1
        id: package_id
        env:
          GH_TOKEN: ${{ secrets.github-token || github.token }}
        run: |
          response=$(gh api /orgs/${{ inputs.github-organisation }}/packages/${{ inputs.package-type }}/${{ inputs.package-name }}/versions)
          # echo "response=$response"
          if jq -e . >/dev/null 2>&1 <<<"$response"; then
            package_id=$(jq -r '.[] | select(.name=="${{ inputs.package-version }}") | .id' <<<"$response")
            echo "package_id=$package_id"
          fi

          echo "id=$package_id" >> $GITHUB_OUTPUT

      - name: Delete package version
        if: steps.package_id.outputs.id != null
        env:
          GH_TOKEN: ${{ secrets.github-token || github.token }}
        run: |
          result=$(gh api -X DELETE /orgs/${{ inputs.github-organisation }}/packages/${{ inputs.package-type }}/${{ inputs.package-name }}/versions/${{ steps.package_id.outputs.id }})
          echo "$result"
