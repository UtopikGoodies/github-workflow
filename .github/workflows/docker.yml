name: Docker

on:
  workflow_call:
    inputs:
      docker-registry:
        description: 'Docker registry to push images to'
        required: true
        type: string
      docker-username:
        description: 'Docker registry username'
        required: true
        type: string
      dockerfile-directory:
        description: 'Directory containing the Dockerfile'
        required: true
        type: string
    outputs:
      image-tags:
        description: 'Docker image tags'
        value: ${{ jobs.build-publish.outputs.image-tags }}
    secrets:
      docker-password:
        description: 'Docker registry password'
        required: true

jobs:
  build-publish:
    runs-on: ubuntu-latest
    outputs:
      image-tags: ${{ steps.updated-tags.outputs.tags }}
      image-labels: ${{ steps.meta.outputs.labels }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Install the cosign tool except on PR
      # https://github.com/sigstore/cosign-installer
      - name: Install cosign
        if: startsWith(github.ref, 'refs/tags/v')
        uses: sigstore/cosign-installer@v3
        with:
          cosign-release: 'v2.1.1'

      # Set up BuildKit Docker container builder to be able to build
      # multi-platform images and export cache
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
           version: v0.11.2

      # Login against a Docker registry
      # https://github.com/docker/login-action
      - name: Log into Docker registry ${{ inputs.docker-registry }}
        uses: docker/login-action@v3
        with:
          registry: ${{ inputs.docker-registry }}
          username: ${{ inputs.docker-username }}
          password: ${{ secrets.docker-password }}
          # password: ${{ contains(inputs.docker-registry, 'ghcr.io') && secrets.GITHUB_TOKEN || secrets.docker-password }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ inputs.docker-registry }}/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}

      # Update tags to replace pr- with pr. for PRs
      - name: Update tags
        id: updated-tags
        run: |
          TAGS="${{ steps.meta.outputs.tags }}"
          MODIFIED_TAGS=$(echo "$TAGS" | sed 's/pr-/pr\./g')
          if [[ -z $MODIFIED_TAGS ]]; then
            MODIFIED_TAGS=$TAGS
          fi
          echo "tags=$MODIFIED_TAGS" >> $GITHUB_OUTPUT

      # Build and push Docker image with Buildx
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: ${{ inputs.dockerfile-directory }}
          push: true
          tags: ${{ steps.updated-tags.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false

      # Sign the resulting Docker image digest except on PRs.
      # This will only write to the public Rekor transparency log when the Docker
      # repository is public to avoid leaking data.  If you would like to publish
      # transparency data even for private images, pass --force to cosign below.
      # https://github.com/sigstore/cosign
      - name: Sign the published Docker image
        if: startsWith(github.ref, 'refs/tags/v')
        env:
          TAGS: ${{ steps.updated-tags.outputs.tags }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        # This step uses the identity token to provision an ephemeral certificate
        # against the sigstore community Fulcio instance.
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}
